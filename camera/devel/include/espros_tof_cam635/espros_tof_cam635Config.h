//#line 2 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the espros_tof_cam635 package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __espros_tof_cam635__ESPROS_TOF_CAM635CONFIG_H__
#define __espros_tof_cam635__ESPROS_TOF_CAM635CONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace espros_tof_cam635
{
  class espros_tof_cam635ConfigStatics;

  class espros_tof_cam635Config
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      virtual ~AbstractParamDescription() = default;

      virtual void clamp(espros_tof_cam635Config &config, const espros_tof_cam635Config &max, const espros_tof_cam635Config &min) const = 0;
      virtual void calcLevel(uint32_t &level, const espros_tof_cam635Config &config1, const espros_tof_cam635Config &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, espros_tof_cam635Config &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const espros_tof_cam635Config &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, espros_tof_cam635Config &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const espros_tof_cam635Config &config) const = 0;
      virtual void getValue(const espros_tof_cam635Config &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T espros_tof_cam635Config::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T espros_tof_cam635Config::* field;

      virtual void clamp(espros_tof_cam635Config &config, const espros_tof_cam635Config &max, const espros_tof_cam635Config &min) const override
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const espros_tof_cam635Config &config1, const espros_tof_cam635Config &config2) const override
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, espros_tof_cam635Config &config) const override
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const espros_tof_cam635Config &config) const override
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, espros_tof_cam635Config &config) const override
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const espros_tof_cam635Config &config) const override
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const espros_tof_cam635Config &config, boost::any &val) const override
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      virtual ~AbstractGroupDescription() = default;

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, espros_tof_cam635Config &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, espros_tof_cam635Config &top) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const override
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T PT::* field;
      std::vector<espros_tof_cam635Config::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(espros_tof_cam635Config &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("image_type"==(*_i)->name){image_type = boost::any_cast<int>(val);}
        if("mode"==(*_i)->name){mode = boost::any_cast<int>(val);}
        if("frame_rate"==(*_i)->name){frame_rate = boost::any_cast<double>(val);}
        if("start_stream"==(*_i)->name){start_stream = boost::any_cast<bool>(val);}
        if("trigger_single_shot"==(*_i)->name){trigger_single_shot = boost::any_cast<bool>(val);}
        if("hdr"==(*_i)->name){hdr = boost::any_cast<int>(val);}
        if("automatic_integration_time"==(*_i)->name){automatic_integration_time = boost::any_cast<bool>(val);}
        if("integration_time_0"==(*_i)->name){integration_time_0 = boost::any_cast<int>(val);}
        if("integration_time_1"==(*_i)->name){integration_time_1 = boost::any_cast<int>(val);}
        if("integration_time_2"==(*_i)->name){integration_time_2 = boost::any_cast<int>(val);}
        if("integration_time_3"==(*_i)->name){integration_time_3 = boost::any_cast<int>(val);}
        if("integration_time_4"==(*_i)->name){integration_time_4 = boost::any_cast<int>(val);}
        if("integration_time_5"==(*_i)->name){integration_time_5 = boost::any_cast<int>(val);}
        if("integration_time_gray"==(*_i)->name){integration_time_gray = boost::any_cast<int>(val);}
        if("low_power_illumination"==(*_i)->name){low_power_illumination = boost::any_cast<bool>(val);}
        if("modulation_frequency"==(*_i)->name){modulation_frequency = boost::any_cast<int>(val);}
        if("temporal_filter_factor_WFOV"==(*_i)->name){temporal_filter_factor_WFOV = boost::any_cast<double>(val);}
        if("temporal_filter_threshold_WFOV"==(*_i)->name){temporal_filter_threshold_WFOV = boost::any_cast<int>(val);}
        if("temporal_filter_factor_NFOV"==(*_i)->name){temporal_filter_factor_NFOV = boost::any_cast<double>(val);}
        if("temporal_filter_threshold_NFOV"==(*_i)->name){temporal_filter_threshold_NFOV = boost::any_cast<int>(val);}
        if("spatial_average_filter"==(*_i)->name){spatial_average_filter = boost::any_cast<bool>(val);}
        if("spatial_median_filter"==(*_i)->name){spatial_median_filter = boost::any_cast<bool>(val);}
        if("min_amplitude_0"==(*_i)->name){min_amplitude_0 = boost::any_cast<int>(val);}
        if("min_amplitude_1"==(*_i)->name){min_amplitude_1 = boost::any_cast<int>(val);}
        if("min_amplitude_2"==(*_i)->name){min_amplitude_2 = boost::any_cast<int>(val);}
        if("min_amplitude_3"==(*_i)->name){min_amplitude_3 = boost::any_cast<int>(val);}
        if("min_amplitude_4"==(*_i)->name){min_amplitude_4 = boost::any_cast<int>(val);}
        if("offset_distance"==(*_i)->name){offset_distance = boost::any_cast<int>(val);}
        if("interference_detection"==(*_i)->name){interference_detection = boost::any_cast<bool>(val);}
        if("interference_detection_threshold"==(*_i)->name){interference_detection_threshold = boost::any_cast<int>(val);}
        if("interference_detection_last_value"==(*_i)->name){interference_detection_last_value = boost::any_cast<bool>(val);}
        if("roi_left_x"==(*_i)->name){roi_left_x = boost::any_cast<int>(val);}
        if("roi_top_y"==(*_i)->name){roi_top_y = boost::any_cast<int>(val);}
        if("roi_right_x"==(*_i)->name){roi_right_x = boost::any_cast<int>(val);}
        if("roi_bottom_y"==(*_i)->name){roi_bottom_y = boost::any_cast<int>(val);}
        if("lensCenterOffsetX"==(*_i)->name){lensCenterOffsetX = boost::any_cast<int>(val);}
        if("lensCenterOffsetY"==(*_i)->name){lensCenterOffsetY = boost::any_cast<int>(val);}
        if("enable_cartesian"==(*_i)->name){enable_cartesian = boost::any_cast<bool>(val);}
        if("enable_images"==(*_i)->name){enable_images = boost::any_cast<bool>(val);}
        if("enable_point_cloud"==(*_i)->name){enable_point_cloud = boost::any_cast<bool>(val);}
        if("enable_image_header"==(*_i)->name){enable_image_header = boost::any_cast<bool>(val);}
      }
    }

    int image_type;
int mode;
double frame_rate;
bool start_stream;
bool trigger_single_shot;
int hdr;
bool automatic_integration_time;
int integration_time_0;
int integration_time_1;
int integration_time_2;
int integration_time_3;
int integration_time_4;
int integration_time_5;
int integration_time_gray;
bool low_power_illumination;
int modulation_frequency;
double temporal_filter_factor_WFOV;
int temporal_filter_threshold_WFOV;
double temporal_filter_factor_NFOV;
int temporal_filter_threshold_NFOV;
bool spatial_average_filter;
bool spatial_median_filter;
int min_amplitude_0;
int min_amplitude_1;
int min_amplitude_2;
int min_amplitude_3;
int min_amplitude_4;
int offset_distance;
bool interference_detection;
int interference_detection_threshold;
bool interference_detection_last_value;
int roi_left_x;
int roi_top_y;
int roi_right_x;
int roi_bottom_y;
int lensCenterOffsetX;
int lensCenterOffsetY;
bool enable_cartesian;
bool enable_images;
bool enable_point_cloud;
bool enable_image_header;

    bool state;
    std::string name;

    
}groups;



//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int image_type;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int mode;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double frame_rate;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool start_stream;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool trigger_single_shot;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int hdr;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool automatic_integration_time;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_2;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_4;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_5;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_gray;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool low_power_illumination;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int modulation_frequency;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double temporal_filter_factor_WFOV;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int temporal_filter_threshold_WFOV;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double temporal_filter_factor_NFOV;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int temporal_filter_threshold_NFOV;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool spatial_average_filter;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool spatial_median_filter;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int min_amplitude_0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int min_amplitude_1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int min_amplitude_2;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int min_amplitude_3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int min_amplitude_4;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int offset_distance;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool interference_detection;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int interference_detection_threshold;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool interference_detection_last_value;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int roi_left_x;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int roi_top_y;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int roi_right_x;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int roi_bottom_y;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int lensCenterOffsetX;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int lensCenterOffsetY;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool enable_cartesian;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool enable_images;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool enable_point_cloud;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool enable_image_header;
//#line 231 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("espros_tof_cam635Config::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const espros_tof_cam635Config &__max__ = __getMax__();
      const espros_tof_cam635Config &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const espros_tof_cam635Config &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const espros_tof_cam635Config &__getDefault__();
    static const espros_tof_cam635Config &__getMax__();
    static const espros_tof_cam635Config &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const espros_tof_cam635ConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void espros_tof_cam635Config::ParamDescription<std::string>::clamp(espros_tof_cam635Config &config, const espros_tof_cam635Config &max, const espros_tof_cam635Config &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class espros_tof_cam635ConfigStatics
  {
    friend class espros_tof_cam635Config;

    espros_tof_cam635ConfigStatics()
    {
espros_tof_cam635Config::GroupDescription<espros_tof_cam635Config::DEFAULT, espros_tof_cam635Config> Default("Default", "", 0, 0, true, &espros_tof_cam635Config::groups);
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.image_type = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.image_type = 3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.image_type = 2;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("image_type", "int", 0, "Image type", "{'enum': [{'name': 'Grayscale', 'type': 'int', 'value': 0, 'srcline': 9, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Grayscale', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Distance', 'type': 'int', 'value': 1, 'srcline': 10, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Distance', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Distance_and_Amplitude', 'type': 'int', 'value': 2, 'srcline': 11, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Distance and Amplitude', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Distance_and_Grayscale', 'type': 'int', 'value': 3, 'srcline': 12, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Distance and Grayscale', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'An enum to set image type'}", &espros_tof_cam635Config::image_type)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("image_type", "int", 0, "Image type", "{'enum': [{'name': 'Grayscale', 'type': 'int', 'value': 0, 'srcline': 9, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Grayscale', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Distance', 'type': 'int', 'value': 1, 'srcline': 10, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Distance', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Distance_and_Amplitude', 'type': 'int', 'value': 2, 'srcline': 11, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Distance and Amplitude', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Distance_and_Grayscale', 'type': 'int', 'value': 3, 'srcline': 12, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Distance and Grayscale', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'An enum to set image type'}", &espros_tof_cam635Config::image_type)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.mode = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.mode = 3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.mode = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("mode", "int", 0, "Operating mode", "{'enum': [{'name': 'Wide_Field_image', 'type': 'int', 'value': 0, 'srcline': 16, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Wide Field image', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Narrow_Field_manual', 'type': 'int', 'value': 1, 'srcline': 17, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Narrow Field manual', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Narrow_Field_result', 'type': 'int', 'value': 2, 'srcline': 18, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Narrow Field result', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Narrow_Field_result_and_image', 'type': 'int', 'value': 3, 'srcline': 19, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Narrow Field result and image', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Wide_Field_and_Narrow_Field_result', 'type': 'int', 'value': 4, 'srcline': 20, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Wide Field and Narrow Field result', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Wide_Field_and_Narrow_Field_auto', 'type': 'int', 'value': 5, 'srcline': 21, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Wide_Field and Narrow Field auto', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Wide_Field_and_Narrow_Field_image', 'type': 'int', 'value': 6, 'srcline': 22, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Wide Field and Narrow Field image', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'An enum to set operating mode'}", &espros_tof_cam635Config::mode)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("mode", "int", 0, "Operating mode", "{'enum': [{'name': 'Wide_Field_image', 'type': 'int', 'value': 0, 'srcline': 16, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Wide Field image', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Narrow_Field_manual', 'type': 'int', 'value': 1, 'srcline': 17, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Narrow Field manual', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Narrow_Field_result', 'type': 'int', 'value': 2, 'srcline': 18, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Narrow Field result', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Narrow_Field_result_and_image', 'type': 'int', 'value': 3, 'srcline': 19, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Narrow Field result and image', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Wide_Field_and_Narrow_Field_result', 'type': 'int', 'value': 4, 'srcline': 20, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Wide Field and Narrow Field result', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Wide_Field_and_Narrow_Field_auto', 'type': 'int', 'value': 5, 'srcline': 21, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Wide_Field and Narrow Field auto', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Wide_Field_and_Narrow_Field_image', 'type': 'int', 'value': 6, 'srcline': 22, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'Wide Field and Narrow Field image', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'An enum to set operating mode'}", &espros_tof_cam635Config::mode)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.frame_rate = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.frame_rate = 50.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.frame_rate = 30.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<double>("frame_rate", "double", 0, "Frame rate [Hz]", "", &espros_tof_cam635Config::frame_rate)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<double>("frame_rate", "double", 0, "Frame rate [Hz]", "", &espros_tof_cam635Config::frame_rate)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.start_stream = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.start_stream = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.start_stream = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("start_stream", "bool", 0, "Start / Stop image acquisition streaming", "", &espros_tof_cam635Config::start_stream)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("start_stream", "bool", 0, "Start / Stop image acquisition streaming", "", &espros_tof_cam635Config::start_stream)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.trigger_single_shot = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.trigger_single_shot = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.trigger_single_shot = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("trigger_single_shot", "bool", 0, "Single image acquisition", "", &espros_tof_cam635Config::trigger_single_shot)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("trigger_single_shot", "bool", 0, "Single image acquisition", "", &espros_tof_cam635Config::trigger_single_shot)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.hdr = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.hdr = 2;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.hdr = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("hdr", "int", 0, "HDR mode", "{'enum': [{'name': 'HDR_off', 'type': 'int', 'value': 0, 'srcline': 25, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'HDR off', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'HDR_spatial', 'type': 'int', 'value': 1, 'srcline': 26, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'HDR spatial', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'HDR_temporal', 'type': 'int', 'value': 2, 'srcline': 27, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'HDR temporal', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'An enum to set HDR modes'}", &espros_tof_cam635Config::hdr)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("hdr", "int", 0, "HDR mode", "{'enum': [{'name': 'HDR_off', 'type': 'int', 'value': 0, 'srcline': 25, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'HDR off', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'HDR_spatial', 'type': 'int', 'value': 1, 'srcline': 26, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'HDR spatial', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'HDR_temporal', 'type': 'int', 'value': 2, 'srcline': 27, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'HDR temporal', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'An enum to set HDR modes'}", &espros_tof_cam635Config::hdr)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.automatic_integration_time = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.automatic_integration_time = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.automatic_integration_time = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("automatic_integration_time", "bool", 0, "Automatic integration time", "", &espros_tof_cam635Config::automatic_integration_time)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("automatic_integration_time", "bool", 0, "Automatic integration time", "", &espros_tof_cam635Config::automatic_integration_time)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_0 = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_0 = 1000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_0 = 650;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("integration_time_0", "int", 0, "Integration time TOF for beam A [uS]", "", &espros_tof_cam635Config::integration_time_0)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("integration_time_0", "int", 0, "Integration time TOF for beam A [uS]", "", &espros_tof_cam635Config::integration_time_0)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_1 = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_1 = 1000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_1 = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("integration_time_1", "int", 0, "Integration time TOF for beam A [uS]", "", &espros_tof_cam635Config::integration_time_1)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("integration_time_1", "int", 0, "Integration time TOF for beam A [uS]", "", &espros_tof_cam635Config::integration_time_1)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_2 = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_2 = 1000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_2 = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("integration_time_2", "int", 0, "Integration time TOF for beam A [uS]", "", &espros_tof_cam635Config::integration_time_2)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("integration_time_2", "int", 0, "Integration time TOF for beam A [uS]", "", &espros_tof_cam635Config::integration_time_2)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_3 = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_3 = 1000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_3 = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("integration_time_3", "int", 0, "Integration time TOF for beam A [uS]", "", &espros_tof_cam635Config::integration_time_3)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("integration_time_3", "int", 0, "Integration time TOF for beam A [uS]", "", &espros_tof_cam635Config::integration_time_3)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_4 = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_4 = 1000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_4 = 200;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("integration_time_4", "int", 0, "Integration time TOF for beam B [uS]", "", &espros_tof_cam635Config::integration_time_4)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("integration_time_4", "int", 0, "Integration time TOF for beam B [uS]", "", &espros_tof_cam635Config::integration_time_4)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_5 = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_5 = 1000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_5 = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("integration_time_5", "int", 0, "Integration time TOF for beam B [uS]", "", &espros_tof_cam635Config::integration_time_5)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("integration_time_5", "int", 0, "Integration time TOF for beam B [uS]", "", &espros_tof_cam635Config::integration_time_5)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_gray = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_gray = 50000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_gray = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("integration_time_gray", "int", 0, "Integration time Grayscale [uS]", "", &espros_tof_cam635Config::integration_time_gray)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("integration_time_gray", "int", 0, "Integration time Grayscale [uS]", "", &espros_tof_cam635Config::integration_time_gray)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.low_power_illumination = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.low_power_illumination = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.low_power_illumination = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("low_power_illumination", "bool", 0, "Low power illumination", "", &espros_tof_cam635Config::low_power_illumination)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("low_power_illumination", "bool", 0, "Low power illumination", "", &espros_tof_cam635Config::low_power_illumination)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.modulation_frequency = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.modulation_frequency = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.modulation_frequency = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("modulation_frequency", "int", 0, "Modulation frequency 0 - 10MHz, 1 - 20MHz", "{'enum': [{'name': 'freq_10MHz', 'type': 'int', 'value': 0, 'srcline': 30, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'freq_10MHz', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'freq_20MHz', 'type': 'int', 'value': 1, 'srcline': 31, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'freq_20MHz', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'An enum to set modulation frequency'}", &espros_tof_cam635Config::modulation_frequency)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("modulation_frequency", "int", 0, "Modulation frequency 0 - 10MHz, 1 - 20MHz", "{'enum': [{'name': 'freq_10MHz', 'type': 'int', 'value': 0, 'srcline': 30, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'freq_10MHz', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'freq_20MHz', 'type': 'int', 'value': 1, 'srcline': 31, 'srcfile': '/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg', 'description': 'freq_20MHz', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'An enum to set modulation frequency'}", &espros_tof_cam635Config::modulation_frequency)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.temporal_filter_factor_WFOV = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.temporal_filter_factor_WFOV = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.temporal_filter_factor_WFOV = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<double>("temporal_filter_factor_WFOV", "double", 0, "Kalman all filter gain coefficient", "", &espros_tof_cam635Config::temporal_filter_factor_WFOV)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<double>("temporal_filter_factor_WFOV", "double", 0, "Kalman all filter gain coefficient", "", &espros_tof_cam635Config::temporal_filter_factor_WFOV)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.temporal_filter_threshold_WFOV = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.temporal_filter_threshold_WFOV = 10000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.temporal_filter_threshold_WFOV = 300;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("temporal_filter_threshold_WFOV", "int", 0, "Kalman all filter threshold [mm]", "", &espros_tof_cam635Config::temporal_filter_threshold_WFOV)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("temporal_filter_threshold_WFOV", "int", 0, "Kalman all filter threshold [mm]", "", &espros_tof_cam635Config::temporal_filter_threshold_WFOV)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.temporal_filter_factor_NFOV = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.temporal_filter_factor_NFOV = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.temporal_filter_factor_NFOV = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<double>("temporal_filter_factor_NFOV", "double", 0, "Kalman spot filter gain coefficient", "", &espros_tof_cam635Config::temporal_filter_factor_NFOV)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<double>("temporal_filter_factor_NFOV", "double", 0, "Kalman spot filter gain coefficient", "", &espros_tof_cam635Config::temporal_filter_factor_NFOV)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.temporal_filter_threshold_NFOV = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.temporal_filter_threshold_NFOV = 10000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.temporal_filter_threshold_NFOV = 300;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("temporal_filter_threshold_NFOV", "int", 0, "Kalman spot filter threshold [mm]", "", &espros_tof_cam635Config::temporal_filter_threshold_NFOV)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("temporal_filter_threshold_NFOV", "int", 0, "Kalman spot filter threshold [mm]", "", &espros_tof_cam635Config::temporal_filter_threshold_NFOV)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.spatial_average_filter = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.spatial_average_filter = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.spatial_average_filter = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("spatial_average_filter", "bool", 0, "Spatial average filter", "", &espros_tof_cam635Config::spatial_average_filter)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("spatial_average_filter", "bool", 0, "Spatial average filter", "", &espros_tof_cam635Config::spatial_average_filter)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.spatial_median_filter = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.spatial_median_filter = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.spatial_median_filter = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("spatial_median_filter", "bool", 0, "Median filter", "", &espros_tof_cam635Config::spatial_median_filter)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("spatial_median_filter", "bool", 0, "Median filter", "", &espros_tof_cam635Config::spatial_median_filter)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_amplitude_0 = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_amplitude_0 = 2047;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_amplitude_0 = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("min_amplitude_0", "int", 0, "threshold minAmplitude 0 beam A LSB", "", &espros_tof_cam635Config::min_amplitude_0)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("min_amplitude_0", "int", 0, "threshold minAmplitude 0 beam A LSB", "", &espros_tof_cam635Config::min_amplitude_0)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_amplitude_1 = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_amplitude_1 = 2047;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_amplitude_1 = 100;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("min_amplitude_1", "int", 0, "threshold minAmplitude 1 beam A LSB", "", &espros_tof_cam635Config::min_amplitude_1)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("min_amplitude_1", "int", 0, "threshold minAmplitude 1 beam A LSB", "", &espros_tof_cam635Config::min_amplitude_1)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_amplitude_2 = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_amplitude_2 = 2047;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_amplitude_2 = 200;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("min_amplitude_2", "int", 0, "threshold minAmplitude 2 beam A LSB", "", &espros_tof_cam635Config::min_amplitude_2)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("min_amplitude_2", "int", 0, "threshold minAmplitude 2 beam A LSB", "", &espros_tof_cam635Config::min_amplitude_2)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_amplitude_3 = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_amplitude_3 = 2047;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_amplitude_3 = 500;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("min_amplitude_3", "int", 0, "threshold minAmplitude 3 beam A LSB", "", &espros_tof_cam635Config::min_amplitude_3)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("min_amplitude_3", "int", 0, "threshold minAmplitude 3 beam A LSB", "", &espros_tof_cam635Config::min_amplitude_3)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_amplitude_4 = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_amplitude_4 = 2047;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_amplitude_4 = 200;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("min_amplitude_4", "int", 0, "threshold minAmplitude 4 beam B LSB", "", &espros_tof_cam635Config::min_amplitude_4)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("min_amplitude_4", "int", 0, "threshold minAmplitude 4 beam B LSB", "", &espros_tof_cam635Config::min_amplitude_4)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.offset_distance = -15000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.offset_distance = 15000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.offset_distance = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("offset_distance", "int", 0, "distance offset mm", "", &espros_tof_cam635Config::offset_distance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("offset_distance", "int", 0, "distance offset mm", "", &espros_tof_cam635Config::offset_distance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.interference_detection = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.interference_detection = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.interference_detection = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("interference_detection", "bool", 0, "Use interference detection", "", &espros_tof_cam635Config::interference_detection)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("interference_detection", "bool", 0, "Use interference detection", "", &espros_tof_cam635Config::interference_detection)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.interference_detection_threshold = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.interference_detection_threshold = 2000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.interference_detection_threshold = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("interference_detection_threshold", "int", 0, "Interference detection limit LSB", "", &espros_tof_cam635Config::interference_detection_threshold)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("interference_detection_threshold", "int", 0, "Interference detection limit LSB", "", &espros_tof_cam635Config::interference_detection_threshold)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.interference_detection_last_value = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.interference_detection_last_value = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.interference_detection_last_value = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("interference_detection_last_value", "bool", 0, "Use interference detection last value", "", &espros_tof_cam635Config::interference_detection_last_value)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("interference_detection_last_value", "bool", 0, "Use interference detection last value", "", &espros_tof_cam635Config::interference_detection_last_value)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.roi_left_x = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.roi_left_x = 153;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.roi_left_x = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("roi_left_x", "int", 0, "ROI left X", "", &espros_tof_cam635Config::roi_left_x)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("roi_left_x", "int", 0, "ROI left X", "", &espros_tof_cam635Config::roi_left_x)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.roi_top_y = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.roi_top_y = 57;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.roi_top_y = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("roi_top_y", "int", 0, "ROI top Y", "", &espros_tof_cam635Config::roi_top_y)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("roi_top_y", "int", 0, "ROI top Y", "", &espros_tof_cam635Config::roi_top_y)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.roi_right_x = 5;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.roi_right_x = 159;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.roi_right_x = 159;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("roi_right_x", "int", 0, "ROI right X", "", &espros_tof_cam635Config::roi_right_x)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("roi_right_x", "int", 0, "ROI right X", "", &espros_tof_cam635Config::roi_right_x)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.roi_bottom_y = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.roi_bottom_y = 59;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.roi_bottom_y = 59;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("roi_bottom_y", "int", 0, "ROI bottom Y", "", &espros_tof_cam635Config::roi_bottom_y)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("roi_bottom_y", "int", 0, "ROI bottom Y", "", &espros_tof_cam635Config::roi_bottom_y)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.lensCenterOffsetX = -100;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.lensCenterOffsetX = 100;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.lensCenterOffsetX = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("lensCenterOffsetX", "int", 0, "Lens Optical axis offset releative sensor center X direction [pix]", "", &espros_tof_cam635Config::lensCenterOffsetX)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("lensCenterOffsetX", "int", 0, "Lens Optical axis offset releative sensor center X direction [pix]", "", &espros_tof_cam635Config::lensCenterOffsetX)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.lensCenterOffsetY = -100;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.lensCenterOffsetY = 100;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.lensCenterOffsetY = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("lensCenterOffsetY", "int", 0, "Lens Optical axis offset releative sensor center Y direction [pix]", "", &espros_tof_cam635Config::lensCenterOffsetY)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<int>("lensCenterOffsetY", "int", 0, "Lens Optical axis offset releative sensor center Y direction [pix]", "", &espros_tof_cam635Config::lensCenterOffsetY)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.enable_cartesian = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.enable_cartesian = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.enable_cartesian = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("enable_cartesian", "bool", 0, "Cartesian transformation", "", &espros_tof_cam635Config::enable_cartesian)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("enable_cartesian", "bool", 0, "Cartesian transformation", "", &espros_tof_cam635Config::enable_cartesian)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.enable_images = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.enable_images = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.enable_images = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("enable_images", "bool", 0, "Enable Images", "", &espros_tof_cam635Config::enable_images)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("enable_images", "bool", 0, "Enable Images", "", &espros_tof_cam635Config::enable_images)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.enable_point_cloud = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.enable_point_cloud = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.enable_point_cloud = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("enable_point_cloud", "bool", 0, "Enable point cloud", "", &espros_tof_cam635Config::enable_point_cloud)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("enable_point_cloud", "bool", 0, "Enable point cloud", "", &espros_tof_cam635Config::enable_point_cloud)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.enable_image_header = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.enable_image_header = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.enable_image_header = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("enable_image_header", "bool", 0, "Enable image header", "", &espros_tof_cam635Config::enable_image_header)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam635Config::AbstractParamDescriptionConstPtr(new espros_tof_cam635Config::ParamDescription<bool>("enable_image_header", "bool", 0, "Enable image header", "", &espros_tof_cam635Config::enable_image_header)));
//#line 246 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 246 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(espros_tof_cam635Config::AbstractGroupDescriptionConstPtr(new espros_tof_cam635Config::GroupDescription<espros_tof_cam635Config::DEFAULT, espros_tof_cam635Config>(Default)));
//#line 369 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<espros_tof_cam635Config::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<espros_tof_cam635Config::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<espros_tof_cam635Config::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    espros_tof_cam635Config __max__;
    espros_tof_cam635Config __min__;
    espros_tof_cam635Config __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const espros_tof_cam635ConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static espros_tof_cam635ConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &espros_tof_cam635Config::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const espros_tof_cam635Config &espros_tof_cam635Config::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const espros_tof_cam635Config &espros_tof_cam635Config::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const espros_tof_cam635Config &espros_tof_cam635Config::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<espros_tof_cam635Config::AbstractParamDescriptionConstPtr> &espros_tof_cam635Config::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<espros_tof_cam635Config::AbstractGroupDescriptionConstPtr> &espros_tof_cam635Config::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const espros_tof_cam635ConfigStatics *espros_tof_cam635Config::__get_statics__()
  {
    const static espros_tof_cam635ConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = espros_tof_cam635ConfigStatics::get_instance();

    return statics;
  }

//#line 9 "/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg"
      const int espros_tof_cam635_Grayscale = 0;
//#line 10 "/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg"
      const int espros_tof_cam635_Distance = 1;
//#line 11 "/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg"
      const int espros_tof_cam635_Distance_and_Amplitude = 2;
//#line 12 "/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg"
      const int espros_tof_cam635_Distance_and_Grayscale = 3;
//#line 16 "/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg"
      const int espros_tof_cam635_Wide_Field_image = 0;
//#line 17 "/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg"
      const int espros_tof_cam635_Narrow_Field_manual = 1;
//#line 18 "/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg"
      const int espros_tof_cam635_Narrow_Field_result = 2;
//#line 19 "/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg"
      const int espros_tof_cam635_Narrow_Field_result_and_image = 3;
//#line 20 "/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg"
      const int espros_tof_cam635_Wide_Field_and_Narrow_Field_result = 4;
//#line 21 "/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg"
      const int espros_tof_cam635_Wide_Field_and_Narrow_Field_auto = 5;
//#line 22 "/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg"
      const int espros_tof_cam635_Wide_Field_and_Narrow_Field_image = 6;
//#line 25 "/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg"
      const int espros_tof_cam635_HDR_off = 0;
//#line 26 "/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg"
      const int espros_tof_cam635_HDR_spatial = 1;
//#line 27 "/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg"
      const int espros_tof_cam635_HDR_temporal = 2;
//#line 30 "/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg"
      const int espros_tof_cam635_freq_10MHz = 0;
//#line 31 "/home/ubuntu/Software/mzheng/ros/src/espros_tof_cam635/cfg/espros_tof_cam635.cfg"
      const int espros_tof_cam635_freq_20MHz = 1;
}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __ESPROS_TOF_CAM635RECONFIGURATOR_H__
